{"version":3,"sources":["Util/TelegramUtil.js","assets/jss/material-kit-pro-react/views/blogPostPageStyle.js","Util/cookieUtil.js","firebaseUtil/auth.js","assets/img/bg17_min.jpg","assets/jss/material-kit-pro-react/views/componentsStyle.js","pages/Verify/VerifyLogin.jsx","components/Development/DevelopmentLogin.jsx","pages/ChatPage/ChatPage.jsx","pages/ChatPage/ChatLayoutPage.jsx"],"names":["sendTelegramMessage","text","data","parameter","body","JSON","stringify","headers","method","url","fetch","blogPostPageStyle","container","zIndex","textCenter","textAlign","title","color","whiteColor","subtitle","main","mainRaised","block","padding","fontWeight","fontSize","textTransform","borderRadius","textDecoration","position","display","inlineBlock","width","list","marginBottom","marginTop","left","float","right","margin","icon","height","top","cookieOptions","expires","minute","d","Date","setTime","getTime","getCookieExpire","sameSite","doCreateUserWithEmailAndPassword","email","password","firebaseAuth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","isLogin","loginfunc","logoutfunc","user","console","log","checkIsLogin","module","exports","componentsStyle","parallax","overflow","brand","maxWidth","link","proBadge","backgroundColor","grayColor","lineHeight","boxShadow","hexToRgb","section","sectionGray","background","isStringEqual","text1","text2","String","valueOf","withRouter","history","ispassdoorman","useSelector","state","login","cloudAppVersion","staticFileVersion","productionVersion","useEffect","then","catch","replace","paths","process","window","confirm","location","href","appVersionRef","limitToLast","on","snapshot","val","undefined","sliceData","_","slice","values","currentVersion","reduxDispatch","loginTypes","linda","withCookies","cookies","useState","username","setUsername","ChatPage","sesameOpen","setSesameOpen","RenderComponent","ChatDefaultPage","loadable","carlos","AdminChatPage","UserChatPage","useStyles","makeStyles","useComponentStyles","chatContainerStyle","ChatLayoutPage","React","scrollTo","document","scrollTop","classes","compClasses","Header","links","HeaderLinks","dropdownHoverColor","fixed","changeColorOnScroll","Parallax","image","require","className","GridContainer","justify","GridItem","style"],"mappings":"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","file":"static/js/16.4f11f20b.chunk.js","sourcesContent":["const sendTelegramMessage = (text) => {\r\n    const data = {\r\n        \"chat_id\": -353854239,\r\n        \"text\": text\r\n    };\r\n\r\n    const parameter = {\r\n        body: JSON.stringify(data), // must match 'Content-Type' header\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    }\r\n    const token = \"1009237687:AAGZcnTCzQ4qlBG9motpGA1YRpfEsTc2RFk\";\r\n    const url = `https://api.telegram.org/bot${token}/sendMessage`;\r\n\r\n    fetch(url, parameter);\r\n}\r\n\r\nexport { sendTelegramMessage }","import {\r\n  container,\r\n  title,\r\n  main,\r\n  whiteColor,\r\n  mainRaised\r\n} from \"assets/jss/material-kit-pro-react.js\";\r\n\r\nconst blogPostPageStyle = {\r\n  container: {\r\n    ...container,\r\n    zIndex: \"2\"\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\"\r\n  },\r\n  title: {\r\n    ...title,\r\n    color: whiteColor\r\n  },\r\n  subtitle: {\r\n    color: whiteColor\r\n  },\r\n  main: {\r\n    ...main,\r\n    ...mainRaised\r\n  },\r\n  block: {\r\n    color: \"inherit\",\r\n    padding: \"0.9375rem\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"12px\",\r\n    textTransform: \"uppercase\",\r\n    borderRadius: \"3px\",\r\n    textDecoration: \"none\",\r\n    position: \"relative\",\r\n    display: \"block\"\r\n  },\r\n  inlineBlock: {\r\n    display: \"inline-block\",\r\n    padding: \"0px\",\r\n    width: \"auto\"\r\n  },\r\n  list: {\r\n    marginBottom: \"0\",\r\n    padding: \"0\",\r\n    marginTop: \"0\"\r\n  },\r\n  left: {\r\n    float: \"left!important\",\r\n    display: \"block\"\r\n  },\r\n  right: {\r\n    padding: \"15px 0\",\r\n    margin: \"0\",\r\n    float: \"right\"\r\n  },\r\n  icon: {\r\n    width: \"18px\",\r\n    height: \"18px\",\r\n    top: \"3px\",\r\n    position: \"relative\"\r\n  }\r\n};\r\n\r\nexport default blogPostPageStyle;\r\n","const getCookieExpire = (minute) => {\r\n    let d = new Date();\r\n    d.setTime(d.getTime() + minute * 60 * 1000); // in milliseconds\r\n    return d;\r\n}\r\n\r\nconst defaultCookieExpireMinutes = 120;\r\n\r\nconst cookieOptions = { expires: getCookieExpire(defaultCookieExpireMinutes), sameSite: true };\r\n\r\nexport default cookieOptions;","import { firebaseAuth } from './firebase';\r\n\r\n// Sign Up\r\nconst doCreateUserWithEmailAndPassword = (email, password) =>\r\n    firebaseAuth.createUserWithEmailAndPassword(email, password);\r\n\r\n// Sign In\r\nconst doSignInWithEmailAndPassword = (email, password) =>\r\n    firebaseAuth.signInWithEmailAndPassword(email, password);\r\n\r\n// Sign out\r\nconst doSignOut = () =>\r\n    firebaseAuth.signOut();\r\n\r\n// Password Reset\r\nconst doPasswordReset = (email) =>\r\n    firebaseAuth.sendPasswordResetEmail(email);\r\n\r\n// Password Change\r\nconst doPasswordUpdate = (password) =>\r\n    firebaseAuth.currentUser.updatePassword(password);\r\n\r\nconst isLogin = (loginfunc, logoutfunc) => {\r\n    const user = firebaseAuth.currentUser;\r\n    if (user) {\r\n        // User is signed in.\r\n        console.log(`user login`);\r\n        console.log(user);\r\n        loginfunc();\r\n        return true;\r\n    } else {\r\n        // No user is signed in.\r\n        console.log(`user logout`);\r\n        logoutfunc();\r\n        return false;\r\n    }\r\n}\r\n\r\nconst checkIsLogin = () => {\r\n    const user = firebaseAuth.currentUser;\r\n    return user ? true : false;\r\n}\r\n\r\nexport {\r\n    doCreateUserWithEmailAndPassword,\r\n    doSignInWithEmailAndPassword,\r\n    doSignOut,\r\n    doPasswordReset,\r\n    doPasswordUpdate,\r\n    isLogin,\r\n    checkIsLogin,\r\n}","module.exports = __webpack_public_path__ + \"static/media/bg17_min.43a356f8.jpg\";","import {\r\n  container,\r\n  main,\r\n  mainRaised,\r\n  title,\r\n  whiteColor,\r\n  grayColor,\r\n  section,\r\n  hexToRgb\r\n} from \"assets/jss/material-kit-pro-react.js\";\r\n\r\nconst componentsStyle = {\r\n  main,\r\n  mainRaised,\r\n  parallax: {\r\n    height: \"90vh\",\r\n    overflow: \"hidden\"\r\n  },\r\n  container: {\r\n    ...container,\r\n    zIndex: \"2\",\r\n    position: \"relative\"\r\n  },\r\n  brand: {\r\n    color: whiteColor,\r\n    textAlign: \"center\",\r\n    \"& h1\": {\r\n      fontSize: \"4.2rem\",\r\n      fontWeight: \"600\",\r\n      display: \"inline-block\",\r\n      position: \"relative\"\r\n    },\r\n    \"& h3\": {\r\n      fontSize: \"1.313rem\",\r\n      maxWidth: \"500px\",\r\n      margin: \"10px auto 0\"\r\n    }\r\n  },\r\n  title: {\r\n    ...title,\r\n    color: whiteColor + \"  !important\"\r\n  },\r\n  link: {\r\n    textDecoration: \"none\"\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\"\r\n  },\r\n  proBadge: {\r\n    position: \"absolute\",\r\n    fontSize: \"22px\",\r\n    textTransform: \"uppercase\",\r\n    fontWeight: \"bold\",\r\n    right: \"-90px\",\r\n    top: \"-3px\",\r\n    padding: \"10px 18px\",\r\n    backgroundColor: whiteColor,\r\n    borderRadius: \"3px\",\r\n    color: grayColor[18],\r\n    lineHeight: \"22px\",\r\n    boxShadow: \"0px 5px 5px -2px rgba(\" + hexToRgb(grayColor[25]) + \",0.4)\"\r\n  },\r\n  section: {\r\n    ...section,\r\n    padding: \"70px 0px\"\r\n  },\r\n  sectionGray: {\r\n    background: grayColor[14]\r\n  },\r\n  block: {\r\n    color: \"inherit\",\r\n    padding: \"0.9375rem\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"12px\",\r\n    textTransform: \"uppercase\",\r\n    borderRadius: \"3px\",\r\n    textDecoration: \"none\",\r\n    position: \"relative\",\r\n    display: \"block\"\r\n  },\r\n  inlineBlock: {\r\n    display: \"inline-block\",\r\n    padding: \"0px\",\r\n    width: \"auto\"\r\n  },\r\n  list: {\r\n    marginBottom: \"0\",\r\n    padding: \"0\",\r\n    marginTop: \"0\"\r\n  },\r\n  left: {\r\n    float: \"left!important\",\r\n    display: \"block\"\r\n  },\r\n  right: {\r\n    padding: \"15px 0\",\r\n    margin: \"0\",\r\n    float: \"right\"\r\n  },\r\n  icon: {\r\n    width: \"18px\",\r\n    height: \"18px\",\r\n    top: \"3px\",\r\n    position: \"relative\"\r\n  }\r\n};\r\n\r\nexport default componentsStyle;\r\n","import _ from \"lodash\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { firebaseAuth } from \"firebaseUtil/firebase\";\r\nimport { reduxDispatch } from \"redux/store\";\r\nimport * as loginTypes from \"redux/module/loginModule/action\";\r\nimport * as paths from \"routes/constUrl\";\r\nimport { appVersionRef } from \"firebaseUtil/firebase\";\r\nimport productionVersion from \"deployment/appversion\";\r\nimport { linda } from \"firebaseUtil/user\";\r\nimport { sendTelegramMessage } from \"Util/TelegramUtil\";\r\n\r\nconst VerifyLogin = ({ history }) => {\r\n\r\n    const { ispassdoorman } = useSelector(state => state.login);\r\n    const { user } = useSelector(state => state.login);\r\n    const { cloudAppVersion } = useSelector(state => state.login);\r\n    const staticFileVersion = productionVersion;\r\n\r\n    useEffect(() => {\r\n\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            return;\r\n        }\r\n\r\n        if (!ispassdoorman) {\r\n            firebaseAuth.signOut()\r\n                .then(() => {\r\n                    //success\r\n                })\r\n                .catch(() => {\r\n                    //error\r\n                });\r\n\r\n            history.replace(paths.DoormanPageUrl);\r\n        }\r\n    }, [])\r\n\r\n    //檢查當前使用版本 (local) 跟最新版本 (firebase) 是否有差異，若有差異則強迫使用者重新載入\r\n    useEffect(() => {\r\n\r\n        if (cloudAppVersion && !isStringEqual(staticFileVersion, cloudAppVersion)) {\r\n\r\n            // 開發測試階段跳過驗證\r\n            if (process.env.NODE_ENV === \"development\") {\r\n                console.log(`localAppVersion: ${staticFileVersion}`)\r\n                console.log(`cloudAppVersion: ${cloudAppVersion}`)\r\n            }\r\n\r\n            const isConfirm = window.confirm(`版本更新，請刷新網頁並重新登入。\\n 若提示重複出現，請清除瀏覽器快取 (cache)，並再試一次。 \\n 當前版本: ${staticFileVersion} \\n 更新版本: ${cloudAppVersion}`);\r\n\r\n            //強迫重新登入\r\n            if (isConfirm) {\r\n                window.location.href = \"about:blank\";\r\n            } else {\r\n                window.location.href = \"about:blank\";\r\n            }\r\n\r\n            window.location.href = \"about:blank\";\r\n        }\r\n\r\n    }, [cloudAppVersion])\r\n\r\n    //讀取最新版本 (firebase)\r\n    useEffect(() => {\r\n        const maxMessageNumber = 5;\r\n\r\n        if (appVersionRef) {\r\n            appVersionRef.limitToLast(maxMessageNumber).on(\"value\", snapshot => {\r\n                const data = snapshot.val();\r\n                if (data !== null && data !== undefined) {\r\n                    // 最多顯示 5 則版本資訊\r\n                    const sliceData = _.slice(_.values(data), -maxMessageNumber);\r\n\r\n                    // 最新一則 Po 文的使用者\r\n                    const currentVersion = _.slice(_.values(sliceData), -1)[0];\r\n\r\n                    reduxDispatch(loginTypes.SET_APP_VERSION, currentVersion);\r\n                }\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (staticFileVersion && user && user === linda) {\r\n            sendTelegramMessage(`http://www.uniqlo.com/tw/store/list/new/version${staticFileVersion}`);\r\n        }\r\n    }, [staticFileVersion])\r\n\r\n    return (<></>)\r\n}\r\n\r\nconst isStringEqual = (text1, text2) => {\r\n    return new String(text1).valueOf() == new String(text2).valueOf();\r\n}\r\n\r\nexport default withRouter(VerifyLogin);","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { auth } from \"firebaseUtil\";\r\nimport { carlos } from \"firebaseUtil/user\";\r\nimport cookieOptions from \"Util/cookieUtil\";\r\nimport { reduxDispatch } from \"redux/store\";\r\nimport * as types from \"redux/module/loginModule/action\";\r\nimport { withCookies } from \"react-cookie\";\r\n\r\n//開發模式下，自動登入\r\nconst DevelopmentLogin = ({ history, cookies }) => {\r\n\r\n    const [enableAlert, setEnableAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setUsername('k');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (process.env.NODE_ENV === \"development\" && username !== \"\") {\r\n            const email = \"k@klk.coffee\";\r\n            const password = \"123456!QAZxsw2\";\r\n\r\n            if (auth) {\r\n                auth.doSignInWithEmailAndPassword(email, password)\r\n                    .then(() => {\r\n                        // // firebase 登入成功\r\n                        reduxDispatch(types.SET_LOGIN_USER, username);\r\n                        reduxDispatch(types.LOGIN);\r\n\r\n                        if (username === carlos) {\r\n                            carlosLogin();\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.message) {\r\n                            setEnableAlert(true);\r\n                            setAlertMessage(error.message);\r\n                        }\r\n                    });\r\n            } else {\r\n                console.log(\"firebase error, auth not exist\");\r\n\r\n                setEnableAlert(true);\r\n                setAlertMessage(\"System error, please notify the administrator\");\r\n            }\r\n        }\r\n    }, [username])\r\n\r\n    //若為指定使用者, 則寫入使用者資訊到 cookie\r\n    const carlosLogin = () => {\r\n        if (cookies) {\r\n            cookies.set(\"loginUser\", carlos, cookieOptions);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment />\r\n    )\r\n}\r\n\r\nexport default withCookies(DevelopmentLogin);","import React, { useState, Fragment } from \"react\";\r\nimport loadable from \"@loadable/component\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { carlos, linda } from \"firebaseUtil/user\";\r\nimport VerifyLogin from \"pages/Verify/VerifyLogin\";\r\nimport DevelopmentLogin from \"components/Development/DevelopmentLogin\";\r\n\r\nconst ChatPage = () => {\r\n\r\n    const [sesameOpen, setSesameOpen] = useState(false);\r\n    const { user } = useSelector(state => state.login);\r\n\r\n\r\n    const RenderComponent = () => {\r\n        \r\n        if (sesameOpen === false) {\r\n            const ChatDefaultPage = loadable(() => import(\"./ChatDefaultPage\"));\r\n            return (\r\n                <ChatDefaultPage setSesameOpen={setSesameOpen} />\r\n            )\r\n        } else {\r\n            if (user === carlos) {\r\n                const AdminChatPage = loadable(() => import(\"./AdminChatPage\"));\r\n                return (\r\n                    <AdminChatPage />\r\n                )\r\n            } else if (user === linda) {\r\n                const UserChatPage = loadable(() => import(\"./UserChatPage\"));\r\n                return (\r\n                    <UserChatPage />\r\n                )\r\n            } else {\r\n                return (<></>)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <RenderComponent />\r\n            <VerifyLogin />\r\n            <DevelopmentLogin />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ChatPage;","/*eslint-disable*/\r\nimport React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Header from \"components/Header/Header.js\";\r\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\r\nimport Parallax from \"components/Parallax/Parallax.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport blogPostPageStyle from \"assets/jss/material-kit-pro-react/views/blogPostPageStyle.js\";\r\nimport componentsStyle from \"assets/jss/material-kit-pro-react/views/componentsStyle\";\r\nimport ChatPage from \"./ChatPage\";\r\n\r\nconst useStyles = makeStyles(blogPostPageStyle);\r\nconst useComponentStyles = makeStyles(componentsStyle);\r\n\r\nconst ChatLayoutPage = () => {\r\n    React.useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        document.body.scrollTop = 0;\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const compClasses = useComponentStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Header\r\n                brand=\"Klk Coffee\"\r\n                links={<HeaderLinks dropdownHoverColor=\"dark\" />}\r\n                fixed\r\n                color=\"transparent\"\r\n                changeColorOnScroll={{\r\n                    height: 400,\r\n                    color: \"dark\"\r\n                }}\r\n            />\r\n            <Parallax image={require(\"assets/img/bg17_min.jpg\")}\r\n                // filter=\"dark\"\r\n                className={classes.parallax}\r\n            >\r\n                <div className={classes.container}>\r\n                    <GridContainer justify=\"center\">\r\n                        <GridItem>\r\n                            <div className={compClasses.brand}>\r\n                                <h1>\r\n                                    KLK Coffee{\" \"}\r\n                                </h1>\r\n                                <h3 className={compClasses.title}>CHAT</h3>\r\n                            </div>\r\n                        </GridItem>\r\n                    </GridContainer>\r\n                </div>\r\n            </Parallax>\r\n            <div className={classes.main} style={chatContainerStyle}>\r\n                <div className={classes.container}>\r\n                    <ChatPage />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst chatContainerStyle = {\r\n    backgroundColor: 'gainsboro',\r\n}\r\n\r\n\r\nexport default ChatLayoutPage;"],"sourceRoot":""}